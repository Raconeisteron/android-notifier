// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commands.proto

package org.damazio.notifier.command;

public final class CommandProtocol {
  private CommandProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public static final class Contact extends
      com.google.protobuf.GeneratedMessageLite {
    // Use Contact.newBuilder() to construct.
    private Contact() {
      initFields();
    }
    private Contact(boolean noInit) {}
    
    private static final Contact defaultInstance;
    public static Contact getDefaultInstance() {
      return defaultInstance;
    }
    
    public Contact getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum Type
        implements com.google.protobuf.Internal.EnumLite {
      HOME(0, 0),
      MOBILE(1, 1),
      WORK(2, 2),
      OTHER(3, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 0: return HOME;
          case 1: return MOBILE;
          case 2: return WORK;
          case 3: return OTHER;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:AndroidNotifier.Contact.Type)
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required string number = 2;
    public static final int NUMBER_FIELD_NUMBER = 2;
    private boolean hasNumber;
    private java.lang.String number_ = "";
    public boolean hasNumber() { return hasNumber; }
    public java.lang.String getNumber() { return number_; }
    
    // required .AndroidNotifier.Contact.Type type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private boolean hasType;
    private org.damazio.notifier.command.CommandProtocol.Contact.Type type_;
    public boolean hasType() { return hasType; }
    public org.damazio.notifier.command.CommandProtocol.Contact.Type getType() { return type_; }
    
    // optional string other_type = 4;
    public static final int OTHER_TYPE_FIELD_NUMBER = 4;
    private boolean hasOtherType;
    private java.lang.String otherType_ = "";
    public boolean hasOtherType() { return hasOtherType; }
    public java.lang.String getOtherType() { return otherType_; }
    
    private void initFields() {
      type_ = org.damazio.notifier.command.CommandProtocol.Contact.Type.HOME;
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasNumber) return false;
      if (!hasType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasNumber()) {
        output.writeString(2, getNumber());
      }
      if (hasType()) {
        output.writeEnum(3, getType().getNumber());
      }
      if (hasOtherType()) {
        output.writeString(4, getOtherType());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getNumber());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, getType().getNumber());
      }
      if (hasOtherType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getOtherType());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.damazio.notifier.command.CommandProtocol.Contact parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.Contact parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.Contact parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.Contact parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.Contact parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.Contact parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.Contact parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.damazio.notifier.command.CommandProtocol.Contact parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.damazio.notifier.command.CommandProtocol.Contact parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.Contact parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.damazio.notifier.command.CommandProtocol.Contact prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.damazio.notifier.command.CommandProtocol.Contact, Builder> {
      private org.damazio.notifier.command.CommandProtocol.Contact result;
      
      // Construct using org.damazio.notifier.protocol.CommandProtocol.Contact.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.damazio.notifier.command.CommandProtocol.Contact();
        return builder;
      }
      
      protected org.damazio.notifier.command.CommandProtocol.Contact internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.damazio.notifier.command.CommandProtocol.Contact();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public org.damazio.notifier.command.CommandProtocol.Contact getDefaultInstanceForType() {
        return org.damazio.notifier.command.CommandProtocol.Contact.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.damazio.notifier.command.CommandProtocol.Contact build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.damazio.notifier.command.CommandProtocol.Contact buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.damazio.notifier.command.CommandProtocol.Contact buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.damazio.notifier.command.CommandProtocol.Contact returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(org.damazio.notifier.command.CommandProtocol.Contact other) {
        if (other == org.damazio.notifier.command.CommandProtocol.Contact.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNumber()) {
          setNumber(other.getNumber());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasOtherType()) {
          setOtherType(other.getOtherType());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setNumber(input.readString());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              org.damazio.notifier.command.CommandProtocol.Contact.Type value = org.damazio.notifier.command.CommandProtocol.Contact.Type.valueOf(rawValue);
              if (value != null) {
                setType(value);
              }
              break;
            }
            case 34: {
              setOtherType(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required string number = 2;
      public boolean hasNumber() {
        return result.hasNumber();
      }
      public java.lang.String getNumber() {
        return result.getNumber();
      }
      public Builder setNumber(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNumber = true;
        result.number_ = value;
        return this;
      }
      public Builder clearNumber() {
        result.hasNumber = false;
        result.number_ = getDefaultInstance().getNumber();
        return this;
      }
      
      // required .AndroidNotifier.Contact.Type type = 3;
      public boolean hasType() {
        return result.hasType();
      }
      public org.damazio.notifier.command.CommandProtocol.Contact.Type getType() {
        return result.getType();
      }
      public Builder setType(org.damazio.notifier.command.CommandProtocol.Contact.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = org.damazio.notifier.command.CommandProtocol.Contact.Type.HOME;
        return this;
      }
      
      // optional string other_type = 4;
      public boolean hasOtherType() {
        return result.hasOtherType();
      }
      public java.lang.String getOtherType() {
        return result.getOtherType();
      }
      public Builder setOtherType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOtherType = true;
        result.otherType_ = value;
        return this;
      }
      public Builder clearOtherType() {
        result.hasOtherType = false;
        result.otherType_ = getDefaultInstance().getOtherType();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:AndroidNotifier.Contact)
    }
    
    static {
      defaultInstance = new Contact(true);
      org.damazio.notifier.command.CommandProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AndroidNotifier.Contact)
  }
  
  public static final class CommandRequest extends
      com.google.protobuf.GeneratedMessageLite {
    // Use CommandRequest.newBuilder() to construct.
    private CommandRequest() {
      initFields();
    }
    private CommandRequest(boolean noInit) {}
    
    private static final CommandRequest defaultInstance;
    public static CommandRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CommandRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum CommandType
        implements com.google.protobuf.Internal.EnumLite {
      CALL(0, 1),
      ANSWER(1, 2),
      HANG_UP(2, 3),
      SEND_SMS(3, 4),
      SEND_MMS(4, 5),
      QUERY(5, 6),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static CommandType valueOf(int value) {
        switch (value) {
          case 1: return CALL;
          case 2: return ANSWER;
          case 3: return HANG_UP;
          case 4: return SEND_SMS;
          case 5: return SEND_MMS;
          case 6: return QUERY;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<CommandType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<CommandType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CommandType>() {
              public CommandType findValueByNumber(int number) {
                return CommandType.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private CommandType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:AndroidNotifier.CommandRequest.CommandType)
    }
    
    public static final class CallOptions extends
        com.google.protobuf.GeneratedMessageLite {
      // Use CallOptions.newBuilder() to construct.
      private CallOptions() {
        initFields();
      }
      private CallOptions(boolean noInit) {}
      
      private static final CallOptions defaultInstance;
      public static CallOptions getDefaultInstance() {
        return defaultInstance;
      }
      
      public CallOptions getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // required string phone_number = 1;
      public static final int PHONE_NUMBER_FIELD_NUMBER = 1;
      private boolean hasPhoneNumber;
      private java.lang.String phoneNumber_ = "";
      public boolean hasPhoneNumber() { return hasPhoneNumber; }
      public java.lang.String getPhoneNumber() { return phoneNumber_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasPhoneNumber) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasPhoneNumber()) {
          output.writeString(1, getPhoneNumber());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasPhoneNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getPhoneNumber());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions, Builder> {
        private org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions result;
        
        // Construct using org.damazio.notifier.protocol.CommandProtocol.CommandRequest.CallOptions.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions();
          return builder;
        }
        
        protected org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions getDefaultInstanceForType() {
          return org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions other) {
          if (other == org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions.getDefaultInstance()) return this;
          if (other.hasPhoneNumber()) {
            setPhoneNumber(other.getPhoneNumber());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                setPhoneNumber(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required string phone_number = 1;
        public boolean hasPhoneNumber() {
          return result.hasPhoneNumber();
        }
        public java.lang.String getPhoneNumber() {
          return result.getPhoneNumber();
        }
        public Builder setPhoneNumber(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasPhoneNumber = true;
          result.phoneNumber_ = value;
          return this;
        }
        public Builder clearPhoneNumber() {
          result.hasPhoneNumber = false;
          result.phoneNumber_ = getDefaultInstance().getPhoneNumber();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:AndroidNotifier.CommandRequest.CallOptions)
      }
      
      static {
        defaultInstance = new CallOptions(true);
        org.damazio.notifier.command.CommandProtocol.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:AndroidNotifier.CommandRequest.CallOptions)
    }
    
    public static final class SmsOptions extends
        com.google.protobuf.GeneratedMessageLite {
      // Use SmsOptions.newBuilder() to construct.
      private SmsOptions() {
        initFields();
      }
      private SmsOptions(boolean noInit) {}
      
      private static final SmsOptions defaultInstance;
      public static SmsOptions getDefaultInstance() {
        return defaultInstance;
      }
      
      public SmsOptions getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // required string phone_number = 1;
      public static final int PHONE_NUMBER_FIELD_NUMBER = 1;
      private boolean hasPhoneNumber;
      private java.lang.String phoneNumber_ = "";
      public boolean hasPhoneNumber() { return hasPhoneNumber; }
      public java.lang.String getPhoneNumber() { return phoneNumber_; }
      
      // required string sms_message = 2;
      public static final int SMS_MESSAGE_FIELD_NUMBER = 2;
      private boolean hasSmsMessage;
      private java.lang.String smsMessage_ = "";
      public boolean hasSmsMessage() { return hasSmsMessage; }
      public java.lang.String getSmsMessage() { return smsMessage_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasPhoneNumber) return false;
        if (!hasSmsMessage) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasPhoneNumber()) {
          output.writeString(1, getPhoneNumber());
        }
        if (hasSmsMessage()) {
          output.writeString(2, getSmsMessage());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasPhoneNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getPhoneNumber());
        }
        if (hasSmsMessage()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getSmsMessage());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions, Builder> {
        private org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions result;
        
        // Construct using org.damazio.notifier.protocol.CommandProtocol.CommandRequest.SmsOptions.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions();
          return builder;
        }
        
        protected org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions getDefaultInstanceForType() {
          return org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions other) {
          if (other == org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions.getDefaultInstance()) return this;
          if (other.hasPhoneNumber()) {
            setPhoneNumber(other.getPhoneNumber());
          }
          if (other.hasSmsMessage()) {
            setSmsMessage(other.getSmsMessage());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                setPhoneNumber(input.readString());
                break;
              }
              case 18: {
                setSmsMessage(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required string phone_number = 1;
        public boolean hasPhoneNumber() {
          return result.hasPhoneNumber();
        }
        public java.lang.String getPhoneNumber() {
          return result.getPhoneNumber();
        }
        public Builder setPhoneNumber(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasPhoneNumber = true;
          result.phoneNumber_ = value;
          return this;
        }
        public Builder clearPhoneNumber() {
          result.hasPhoneNumber = false;
          result.phoneNumber_ = getDefaultInstance().getPhoneNumber();
          return this;
        }
        
        // required string sms_message = 2;
        public boolean hasSmsMessage() {
          return result.hasSmsMessage();
        }
        public java.lang.String getSmsMessage() {
          return result.getSmsMessage();
        }
        public Builder setSmsMessage(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasSmsMessage = true;
          result.smsMessage_ = value;
          return this;
        }
        public Builder clearSmsMessage() {
          result.hasSmsMessage = false;
          result.smsMessage_ = getDefaultInstance().getSmsMessage();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:AndroidNotifier.CommandRequest.SmsOptions)
      }
      
      static {
        defaultInstance = new SmsOptions(true);
        org.damazio.notifier.command.CommandProtocol.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:AndroidNotifier.CommandRequest.SmsOptions)
    }
    
    public static final class QueryOptions extends
        com.google.protobuf.GeneratedMessageLite {
      // Use QueryOptions.newBuilder() to construct.
      private QueryOptions() {
        initFields();
      }
      private QueryOptions(boolean noInit) {}
      
      private static final QueryOptions defaultInstance;
      public static QueryOptions getDefaultInstance() {
        return defaultInstance;
      }
      
      public QueryOptions getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // required string query = 1;
      public static final int QUERY_FIELD_NUMBER = 1;
      private boolean hasQuery;
      private java.lang.String query_ = "";
      public boolean hasQuery() { return hasQuery; }
      public java.lang.String getQuery() { return query_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasQuery) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasQuery()) {
          output.writeString(1, getQuery());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasQuery()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getQuery());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions, Builder> {
        private org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions result;
        
        // Construct using org.damazio.notifier.protocol.CommandProtocol.CommandRequest.QueryOptions.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions();
          return builder;
        }
        
        protected org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions getDefaultInstanceForType() {
          return org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions other) {
          if (other == org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions.getDefaultInstance()) return this;
          if (other.hasQuery()) {
            setQuery(other.getQuery());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                setQuery(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required string query = 1;
        public boolean hasQuery() {
          return result.hasQuery();
        }
        public java.lang.String getQuery() {
          return result.getQuery();
        }
        public Builder setQuery(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasQuery = true;
          result.query_ = value;
          return this;
        }
        public Builder clearQuery() {
          result.hasQuery = false;
          result.query_ = getDefaultInstance().getQuery();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:AndroidNotifier.CommandRequest.QueryOptions)
      }
      
      static {
        defaultInstance = new QueryOptions(true);
        org.damazio.notifier.command.CommandProtocol.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:AndroidNotifier.CommandRequest.QueryOptions)
    }
    
    // required fixed64 device_id = 1;
    public static final int DEVICE_ID_FIELD_NUMBER = 1;
    private boolean hasDeviceId;
    private long deviceId_ = 0L;
    public boolean hasDeviceId() { return hasDeviceId; }
    public long getDeviceId() { return deviceId_; }
    
    // required fixed64 command_id = 2;
    public static final int COMMAND_ID_FIELD_NUMBER = 2;
    private boolean hasCommandId;
    private long commandId_ = 0L;
    public boolean hasCommandId() { return hasCommandId; }
    public long getCommandId() { return commandId_; }
    
    // required .AndroidNotifier.CommandRequest.CommandType command_type = 3;
    public static final int COMMAND_TYPE_FIELD_NUMBER = 3;
    private boolean hasCommandType;
    private org.damazio.notifier.command.CommandProtocol.CommandRequest.CommandType commandType_;
    public boolean hasCommandType() { return hasCommandType; }
    public org.damazio.notifier.command.CommandProtocol.CommandRequest.CommandType getCommandType() { return commandType_; }
    
    // optional .AndroidNotifier.CommandRequest.CallOptions call_options = 10;
    public static final int CALL_OPTIONS_FIELD_NUMBER = 10;
    private boolean hasCallOptions;
    private org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions callOptions_;
    public boolean hasCallOptions() { return hasCallOptions; }
    public org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions getCallOptions() { return callOptions_; }
    
    // optional .AndroidNotifier.CommandRequest.SmsOptions sms_options = 11;
    public static final int SMS_OPTIONS_FIELD_NUMBER = 11;
    private boolean hasSmsOptions;
    private org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions smsOptions_;
    public boolean hasSmsOptions() { return hasSmsOptions; }
    public org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions getSmsOptions() { return smsOptions_; }
    
    // optional .AndroidNotifier.CommandRequest.QueryOptions query_options = 12;
    public static final int QUERY_OPTIONS_FIELD_NUMBER = 12;
    private boolean hasQueryOptions;
    private org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions queryOptions_;
    public boolean hasQueryOptions() { return hasQueryOptions; }
    public org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions getQueryOptions() { return queryOptions_; }
    
    private void initFields() {
      commandType_ = org.damazio.notifier.command.CommandProtocol.CommandRequest.CommandType.CALL;
      callOptions_ = org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions.getDefaultInstance();
      smsOptions_ = org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions.getDefaultInstance();
      queryOptions_ = org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasDeviceId) return false;
      if (!hasCommandId) return false;
      if (!hasCommandType) return false;
      if (hasCallOptions()) {
        if (!getCallOptions().isInitialized()) return false;
      }
      if (hasSmsOptions()) {
        if (!getSmsOptions().isInitialized()) return false;
      }
      if (hasQueryOptions()) {
        if (!getQueryOptions().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDeviceId()) {
        output.writeFixed64(1, getDeviceId());
      }
      if (hasCommandId()) {
        output.writeFixed64(2, getCommandId());
      }
      if (hasCommandType()) {
        output.writeEnum(3, getCommandType().getNumber());
      }
      if (hasCallOptions()) {
        output.writeMessage(10, getCallOptions());
      }
      if (hasSmsOptions()) {
        output.writeMessage(11, getSmsOptions());
      }
      if (hasQueryOptions()) {
        output.writeMessage(12, getQueryOptions());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDeviceId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getDeviceId());
      }
      if (hasCommandId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getCommandId());
      }
      if (hasCommandType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, getCommandType().getNumber());
      }
      if (hasCallOptions()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getCallOptions());
      }
      if (hasSmsOptions()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getSmsOptions());
      }
      if (hasQueryOptions()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getQueryOptions());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.damazio.notifier.command.CommandProtocol.CommandRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.damazio.notifier.command.CommandProtocol.CommandRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.damazio.notifier.command.CommandProtocol.CommandRequest, Builder> {
      private org.damazio.notifier.command.CommandProtocol.CommandRequest result;
      
      // Construct using org.damazio.notifier.protocol.CommandProtocol.CommandRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.damazio.notifier.command.CommandProtocol.CommandRequest();
        return builder;
      }
      
      protected org.damazio.notifier.command.CommandProtocol.CommandRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.damazio.notifier.command.CommandProtocol.CommandRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public org.damazio.notifier.command.CommandProtocol.CommandRequest getDefaultInstanceForType() {
        return org.damazio.notifier.command.CommandProtocol.CommandRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.damazio.notifier.command.CommandProtocol.CommandRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.damazio.notifier.command.CommandProtocol.CommandRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.damazio.notifier.command.CommandProtocol.CommandRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.damazio.notifier.command.CommandProtocol.CommandRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(org.damazio.notifier.command.CommandProtocol.CommandRequest other) {
        if (other == org.damazio.notifier.command.CommandProtocol.CommandRequest.getDefaultInstance()) return this;
        if (other.hasDeviceId()) {
          setDeviceId(other.getDeviceId());
        }
        if (other.hasCommandId()) {
          setCommandId(other.getCommandId());
        }
        if (other.hasCommandType()) {
          setCommandType(other.getCommandType());
        }
        if (other.hasCallOptions()) {
          mergeCallOptions(other.getCallOptions());
        }
        if (other.hasSmsOptions()) {
          mergeSmsOptions(other.getSmsOptions());
        }
        if (other.hasQueryOptions()) {
          mergeQueryOptions(other.getQueryOptions());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 9: {
              setDeviceId(input.readFixed64());
              break;
            }
            case 17: {
              setCommandId(input.readFixed64());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              org.damazio.notifier.command.CommandProtocol.CommandRequest.CommandType value = org.damazio.notifier.command.CommandProtocol.CommandRequest.CommandType.valueOf(rawValue);
              if (value != null) {
                setCommandType(value);
              }
              break;
            }
            case 82: {
              org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions.Builder subBuilder = org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions.newBuilder();
              if (hasCallOptions()) {
                subBuilder.mergeFrom(getCallOptions());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCallOptions(subBuilder.buildPartial());
              break;
            }
            case 90: {
              org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions.Builder subBuilder = org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions.newBuilder();
              if (hasSmsOptions()) {
                subBuilder.mergeFrom(getSmsOptions());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSmsOptions(subBuilder.buildPartial());
              break;
            }
            case 98: {
              org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions.Builder subBuilder = org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions.newBuilder();
              if (hasQueryOptions()) {
                subBuilder.mergeFrom(getQueryOptions());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setQueryOptions(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required fixed64 device_id = 1;
      public boolean hasDeviceId() {
        return result.hasDeviceId();
      }
      public long getDeviceId() {
        return result.getDeviceId();
      }
      public Builder setDeviceId(long value) {
        result.hasDeviceId = true;
        result.deviceId_ = value;
        return this;
      }
      public Builder clearDeviceId() {
        result.hasDeviceId = false;
        result.deviceId_ = 0L;
        return this;
      }
      
      // required fixed64 command_id = 2;
      public boolean hasCommandId() {
        return result.hasCommandId();
      }
      public long getCommandId() {
        return result.getCommandId();
      }
      public Builder setCommandId(long value) {
        result.hasCommandId = true;
        result.commandId_ = value;
        return this;
      }
      public Builder clearCommandId() {
        result.hasCommandId = false;
        result.commandId_ = 0L;
        return this;
      }
      
      // required .AndroidNotifier.CommandRequest.CommandType command_type = 3;
      public boolean hasCommandType() {
        return result.hasCommandType();
      }
      public org.damazio.notifier.command.CommandProtocol.CommandRequest.CommandType getCommandType() {
        return result.getCommandType();
      }
      public Builder setCommandType(org.damazio.notifier.command.CommandProtocol.CommandRequest.CommandType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCommandType = true;
        result.commandType_ = value;
        return this;
      }
      public Builder clearCommandType() {
        result.hasCommandType = false;
        result.commandType_ = org.damazio.notifier.command.CommandProtocol.CommandRequest.CommandType.CALL;
        return this;
      }
      
      // optional .AndroidNotifier.CommandRequest.CallOptions call_options = 10;
      public boolean hasCallOptions() {
        return result.hasCallOptions();
      }
      public org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions getCallOptions() {
        return result.getCallOptions();
      }
      public Builder setCallOptions(org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCallOptions = true;
        result.callOptions_ = value;
        return this;
      }
      public Builder setCallOptions(org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions.Builder builderForValue) {
        result.hasCallOptions = true;
        result.callOptions_ = builderForValue.build();
        return this;
      }
      public Builder mergeCallOptions(org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions value) {
        if (result.hasCallOptions() &&
            result.callOptions_ != org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions.getDefaultInstance()) {
          result.callOptions_ =
            org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions.newBuilder(result.callOptions_).mergeFrom(value).buildPartial();
        } else {
          result.callOptions_ = value;
        }
        result.hasCallOptions = true;
        return this;
      }
      public Builder clearCallOptions() {
        result.hasCallOptions = false;
        result.callOptions_ = org.damazio.notifier.command.CommandProtocol.CommandRequest.CallOptions.getDefaultInstance();
        return this;
      }
      
      // optional .AndroidNotifier.CommandRequest.SmsOptions sms_options = 11;
      public boolean hasSmsOptions() {
        return result.hasSmsOptions();
      }
      public org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions getSmsOptions() {
        return result.getSmsOptions();
      }
      public Builder setSmsOptions(org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSmsOptions = true;
        result.smsOptions_ = value;
        return this;
      }
      public Builder setSmsOptions(org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions.Builder builderForValue) {
        result.hasSmsOptions = true;
        result.smsOptions_ = builderForValue.build();
        return this;
      }
      public Builder mergeSmsOptions(org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions value) {
        if (result.hasSmsOptions() &&
            result.smsOptions_ != org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions.getDefaultInstance()) {
          result.smsOptions_ =
            org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions.newBuilder(result.smsOptions_).mergeFrom(value).buildPartial();
        } else {
          result.smsOptions_ = value;
        }
        result.hasSmsOptions = true;
        return this;
      }
      public Builder clearSmsOptions() {
        result.hasSmsOptions = false;
        result.smsOptions_ = org.damazio.notifier.command.CommandProtocol.CommandRequest.SmsOptions.getDefaultInstance();
        return this;
      }
      
      // optional .AndroidNotifier.CommandRequest.QueryOptions query_options = 12;
      public boolean hasQueryOptions() {
        return result.hasQueryOptions();
      }
      public org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions getQueryOptions() {
        return result.getQueryOptions();
      }
      public Builder setQueryOptions(org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasQueryOptions = true;
        result.queryOptions_ = value;
        return this;
      }
      public Builder setQueryOptions(org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions.Builder builderForValue) {
        result.hasQueryOptions = true;
        result.queryOptions_ = builderForValue.build();
        return this;
      }
      public Builder mergeQueryOptions(org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions value) {
        if (result.hasQueryOptions() &&
            result.queryOptions_ != org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions.getDefaultInstance()) {
          result.queryOptions_ =
            org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions.newBuilder(result.queryOptions_).mergeFrom(value).buildPartial();
        } else {
          result.queryOptions_ = value;
        }
        result.hasQueryOptions = true;
        return this;
      }
      public Builder clearQueryOptions() {
        result.hasQueryOptions = false;
        result.queryOptions_ = org.damazio.notifier.command.CommandProtocol.CommandRequest.QueryOptions.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:AndroidNotifier.CommandRequest)
    }
    
    static {
      defaultInstance = new CommandRequest(true);
      org.damazio.notifier.command.CommandProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AndroidNotifier.CommandRequest)
  }
  
  public static final class CommandResponse extends
      com.google.protobuf.GeneratedMessageLite {
    // Use CommandResponse.newBuilder() to construct.
    private CommandResponse() {
      initFields();
    }
    private CommandResponse(boolean noInit) {}
    
    private static final CommandResponse defaultInstance;
    public static CommandResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CommandResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final class SearchResults extends
        com.google.protobuf.GeneratedMessageLite {
      // Use SearchResults.newBuilder() to construct.
      private SearchResults() {
        initFields();
      }
      private SearchResults(boolean noInit) {}
      
      private static final SearchResults defaultInstance;
      public static SearchResults getDefaultInstance() {
        return defaultInstance;
      }
      
      public SearchResults getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // repeated .AndroidNotifier.Contact contacts = 1;
      public static final int CONTACTS_FIELD_NUMBER = 1;
      private java.util.List<org.damazio.notifier.command.CommandProtocol.Contact> contacts_ =
        java.util.Collections.emptyList();
      public java.util.List<org.damazio.notifier.command.CommandProtocol.Contact> getContactsList() {
        return contacts_;
      }
      public int getContactsCount() { return contacts_.size(); }
      public org.damazio.notifier.command.CommandProtocol.Contact getContacts(int index) {
        return contacts_.get(index);
      }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        for (org.damazio.notifier.command.CommandProtocol.Contact element : getContactsList()) {
          if (!element.isInitialized()) return false;
        }
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (org.damazio.notifier.command.CommandProtocol.Contact element : getContactsList()) {
          output.writeMessage(1, element);
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        for (org.damazio.notifier.command.CommandProtocol.Contact element : getContactsList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, element);
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults, Builder> {
        private org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults result;
        
        // Construct using org.damazio.notifier.protocol.CommandProtocol.CommandResponse.SearchResults.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults();
          return builder;
        }
        
        protected org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults getDefaultInstanceForType() {
          return org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.contacts_ != java.util.Collections.EMPTY_LIST) {
            result.contacts_ =
              java.util.Collections.unmodifiableList(result.contacts_);
          }
          org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults other) {
          if (other == org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults.getDefaultInstance()) return this;
          if (!other.contacts_.isEmpty()) {
            if (result.contacts_.isEmpty()) {
              result.contacts_ = new java.util.ArrayList<org.damazio.notifier.command.CommandProtocol.Contact>();
            }
            result.contacts_.addAll(other.contacts_);
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                org.damazio.notifier.command.CommandProtocol.Contact.Builder subBuilder = org.damazio.notifier.command.CommandProtocol.Contact.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addContacts(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // repeated .AndroidNotifier.Contact contacts = 1;
        public java.util.List<org.damazio.notifier.command.CommandProtocol.Contact> getContactsList() {
          return java.util.Collections.unmodifiableList(result.contacts_);
        }
        public int getContactsCount() {
          return result.getContactsCount();
        }
        public org.damazio.notifier.command.CommandProtocol.Contact getContacts(int index) {
          return result.getContacts(index);
        }
        public Builder setContacts(int index, org.damazio.notifier.command.CommandProtocol.Contact value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.contacts_.set(index, value);
          return this;
        }
        public Builder setContacts(int index, org.damazio.notifier.command.CommandProtocol.Contact.Builder builderForValue) {
          result.contacts_.set(index, builderForValue.build());
          return this;
        }
        public Builder addContacts(org.damazio.notifier.command.CommandProtocol.Contact value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.contacts_.isEmpty()) {
            result.contacts_ = new java.util.ArrayList<org.damazio.notifier.command.CommandProtocol.Contact>();
          }
          result.contacts_.add(value);
          return this;
        }
        public Builder addContacts(org.damazio.notifier.command.CommandProtocol.Contact.Builder builderForValue) {
          if (result.contacts_.isEmpty()) {
            result.contacts_ = new java.util.ArrayList<org.damazio.notifier.command.CommandProtocol.Contact>();
          }
          result.contacts_.add(builderForValue.build());
          return this;
        }
        public Builder addAllContacts(
            java.lang.Iterable<? extends org.damazio.notifier.command.CommandProtocol.Contact> values) {
          if (result.contacts_.isEmpty()) {
            result.contacts_ = new java.util.ArrayList<org.damazio.notifier.command.CommandProtocol.Contact>();
          }
          super.addAll(values, result.contacts_);
          return this;
        }
        public Builder clearContacts() {
          result.contacts_ = java.util.Collections.emptyList();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:AndroidNotifier.CommandResponse.SearchResults)
      }
      
      static {
        defaultInstance = new SearchResults(true);
        org.damazio.notifier.command.CommandProtocol.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:AndroidNotifier.CommandResponse.SearchResults)
    }
    
    // required fixed64 device_id = 1;
    public static final int DEVICE_ID_FIELD_NUMBER = 1;
    private boolean hasDeviceId;
    private long deviceId_ = 0L;
    public boolean hasDeviceId() { return hasDeviceId; }
    public long getDeviceId() { return deviceId_; }
    
    // required fixed64 command_id = 2;
    public static final int COMMAND_ID_FIELD_NUMBER = 2;
    private boolean hasCommandId;
    private long commandId_ = 0L;
    public boolean hasCommandId() { return hasCommandId; }
    public long getCommandId() { return commandId_; }
    
    // optional bool success = 3 [default = false];
    public static final int SUCCESS_FIELD_NUMBER = 3;
    private boolean hasSuccess;
    private boolean success_ = false;
    public boolean hasSuccess() { return hasSuccess; }
    public boolean getSuccess() { return success_; }
    
    // optional string errorMessage = 4;
    public static final int ERRORMESSAGE_FIELD_NUMBER = 4;
    private boolean hasErrorMessage;
    private java.lang.String errorMessage_ = "";
    public boolean hasErrorMessage() { return hasErrorMessage; }
    public java.lang.String getErrorMessage() { return errorMessage_; }
    
    // optional .AndroidNotifier.CommandResponse.SearchResults search_results = 10;
    public static final int SEARCH_RESULTS_FIELD_NUMBER = 10;
    private boolean hasSearchResults;
    private org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults searchResults_;
    public boolean hasSearchResults() { return hasSearchResults; }
    public org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults getSearchResults() { return searchResults_; }
    
    private void initFields() {
      searchResults_ = org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasDeviceId) return false;
      if (!hasCommandId) return false;
      if (hasSearchResults()) {
        if (!getSearchResults().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDeviceId()) {
        output.writeFixed64(1, getDeviceId());
      }
      if (hasCommandId()) {
        output.writeFixed64(2, getCommandId());
      }
      if (hasSuccess()) {
        output.writeBool(3, getSuccess());
      }
      if (hasErrorMessage()) {
        output.writeString(4, getErrorMessage());
      }
      if (hasSearchResults()) {
        output.writeMessage(10, getSearchResults());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDeviceId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getDeviceId());
      }
      if (hasCommandId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getCommandId());
      }
      if (hasSuccess()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getSuccess());
      }
      if (hasErrorMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getErrorMessage());
      }
      if (hasSearchResults()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getSearchResults());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.damazio.notifier.command.CommandProtocol.CommandResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.damazio.notifier.command.CommandProtocol.CommandResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.damazio.notifier.command.CommandProtocol.CommandResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.damazio.notifier.command.CommandProtocol.CommandResponse, Builder> {
      private org.damazio.notifier.command.CommandProtocol.CommandResponse result;
      
      // Construct using org.damazio.notifier.protocol.CommandProtocol.CommandResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.damazio.notifier.command.CommandProtocol.CommandResponse();
        return builder;
      }
      
      protected org.damazio.notifier.command.CommandProtocol.CommandResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.damazio.notifier.command.CommandProtocol.CommandResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public org.damazio.notifier.command.CommandProtocol.CommandResponse getDefaultInstanceForType() {
        return org.damazio.notifier.command.CommandProtocol.CommandResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.damazio.notifier.command.CommandProtocol.CommandResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.damazio.notifier.command.CommandProtocol.CommandResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.damazio.notifier.command.CommandProtocol.CommandResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.damazio.notifier.command.CommandProtocol.CommandResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(org.damazio.notifier.command.CommandProtocol.CommandResponse other) {
        if (other == org.damazio.notifier.command.CommandProtocol.CommandResponse.getDefaultInstance()) return this;
        if (other.hasDeviceId()) {
          setDeviceId(other.getDeviceId());
        }
        if (other.hasCommandId()) {
          setCommandId(other.getCommandId());
        }
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        if (other.hasErrorMessage()) {
          setErrorMessage(other.getErrorMessage());
        }
        if (other.hasSearchResults()) {
          mergeSearchResults(other.getSearchResults());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 9: {
              setDeviceId(input.readFixed64());
              break;
            }
            case 17: {
              setCommandId(input.readFixed64());
              break;
            }
            case 24: {
              setSuccess(input.readBool());
              break;
            }
            case 34: {
              setErrorMessage(input.readString());
              break;
            }
            case 82: {
              org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults.Builder subBuilder = org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults.newBuilder();
              if (hasSearchResults()) {
                subBuilder.mergeFrom(getSearchResults());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSearchResults(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required fixed64 device_id = 1;
      public boolean hasDeviceId() {
        return result.hasDeviceId();
      }
      public long getDeviceId() {
        return result.getDeviceId();
      }
      public Builder setDeviceId(long value) {
        result.hasDeviceId = true;
        result.deviceId_ = value;
        return this;
      }
      public Builder clearDeviceId() {
        result.hasDeviceId = false;
        result.deviceId_ = 0L;
        return this;
      }
      
      // required fixed64 command_id = 2;
      public boolean hasCommandId() {
        return result.hasCommandId();
      }
      public long getCommandId() {
        return result.getCommandId();
      }
      public Builder setCommandId(long value) {
        result.hasCommandId = true;
        result.commandId_ = value;
        return this;
      }
      public Builder clearCommandId() {
        result.hasCommandId = false;
        result.commandId_ = 0L;
        return this;
      }
      
      // optional bool success = 3 [default = false];
      public boolean hasSuccess() {
        return result.hasSuccess();
      }
      public boolean getSuccess() {
        return result.getSuccess();
      }
      public Builder setSuccess(boolean value) {
        result.hasSuccess = true;
        result.success_ = value;
        return this;
      }
      public Builder clearSuccess() {
        result.hasSuccess = false;
        result.success_ = false;
        return this;
      }
      
      // optional string errorMessage = 4;
      public boolean hasErrorMessage() {
        return result.hasErrorMessage();
      }
      public java.lang.String getErrorMessage() {
        return result.getErrorMessage();
      }
      public Builder setErrorMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder clearErrorMessage() {
        result.hasErrorMessage = false;
        result.errorMessage_ = getDefaultInstance().getErrorMessage();
        return this;
      }
      
      // optional .AndroidNotifier.CommandResponse.SearchResults search_results = 10;
      public boolean hasSearchResults() {
        return result.hasSearchResults();
      }
      public org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults getSearchResults() {
        return result.getSearchResults();
      }
      public Builder setSearchResults(org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSearchResults = true;
        result.searchResults_ = value;
        return this;
      }
      public Builder setSearchResults(org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults.Builder builderForValue) {
        result.hasSearchResults = true;
        result.searchResults_ = builderForValue.build();
        return this;
      }
      public Builder mergeSearchResults(org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults value) {
        if (result.hasSearchResults() &&
            result.searchResults_ != org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults.getDefaultInstance()) {
          result.searchResults_ =
            org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults.newBuilder(result.searchResults_).mergeFrom(value).buildPartial();
        } else {
          result.searchResults_ = value;
        }
        result.hasSearchResults = true;
        return this;
      }
      public Builder clearSearchResults() {
        result.hasSearchResults = false;
        result.searchResults_ = org.damazio.notifier.command.CommandProtocol.CommandResponse.SearchResults.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:AndroidNotifier.CommandResponse)
    }
    
    static {
      defaultInstance = new CommandResponse(true);
      org.damazio.notifier.command.CommandProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AndroidNotifier.CommandResponse)
  }
  
  
  static {
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
