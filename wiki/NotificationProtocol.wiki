#summary Details of the communication between the android and desktop apps
#labels Phase-Implementation

= Protocol specification =

We use the same protocol over all notification methods.
It uses an extremely complex packet format:

DEVICE_ID/NOTIFICATION_ID/EVENT_TYPE/EVENT_CONTENTS

Where the fields are:
  * DEVICE_ID - string that uniquely identifies the device sending the event
  * NOTIFICATION_ID - a unique ID for the notification, used to eliminate duplicate notifications
  * EVENT_TYPE - one of {RING,SMS,MMS,BATTERY,PING}
  * EVENT_CONTENTS - any text that carries additional information to be displayed with the notification

EVENT_CONTENTS can also contain embedded slashes without any need for escaping - everything after the second slash is considered part of it.

= Wifi =

We send a broadcast packet on port 10600 to 255.255.255.255 (configurable in the future?) with the above contents from the device. The desktop app listens on anything that arrives in that port.

= Bluetooth =

We open a RFCOMM connection from the device using UUID 7674047E-6E47-4BF0-831F-209E3F9DD23F and then send a packet over it with the above contents. We attempt to open it to every paired device until we find one that accepts it (allow the user to select the device in the future?). The desktop app publishes the service with that UUID and listens on connections to it.