// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: android-notifier.proto

package com.google.code.notifier.message;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public static final class Notification extends
      com.google.protobuf.GeneratedMessageLite {
    // Use Notification.newBuilder() to construct.
    private Notification() {
      initFields();
    }
    private Notification(boolean noInit) {}
    
    private static final Notification defaultInstance;
    public static Notification getDefaultInstance() {
      return defaultInstance;
    }
    
    public Notification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum Type
        implements com.google.protobuf.Internal.EnumLite {
      RING(0, 0),
      SMS(1, 1),
      MMS(2, 2),
      BATTERY(3, 3),
      VOICEMAIL(4, 4),
      PING(5, 5),
      USER(6, 6),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 0: return RING;
          case 1: return SMS;
          case 2: return MMS;
          case 3: return BATTERY;
          case 4: return VOICEMAIL;
          case 5: return PING;
          case 6: return USER;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:android_notifier.Notification.Type)
    }
    
    // required fixed32 device_id = 1;
    public static final int DEVICE_ID_FIELD_NUMBER = 1;
    private boolean hasDeviceId;
    private int deviceId_ = 0;
    public boolean hasDeviceId() { return hasDeviceId; }
    public int getDeviceId() { return deviceId_; }
    
    // required fixed32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // required .android_notifier.Notification.Type type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private boolean hasType;
    private com.google.code.notifier.message.Protocol.Notification.Type type_;
    public boolean hasType() { return hasType; }
    public com.google.code.notifier.message.Protocol.Notification.Type getType() { return type_; }
    
    // required string description = 4;
    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private boolean hasDescription;
    private java.lang.String description_ = "";
    public boolean hasDescription() { return hasDescription; }
    public java.lang.String getDescription() { return description_; }
    
    // optional string title = 5;
    public static final int TITLE_FIELD_NUMBER = 5;
    private boolean hasTitle;
    private java.lang.String title_ = "";
    public boolean hasTitle() { return hasTitle; }
    public java.lang.String getTitle() { return title_; }
    
    // optional bytes icon = 6;
    public static final int ICON_FIELD_NUMBER = 6;
    private boolean hasIcon;
    private com.google.protobuf.ByteString icon_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasIcon() { return hasIcon; }
    public com.google.protobuf.ByteString getIcon() { return icon_; }
    
    // optional int32 battery_level = 7;
    public static final int BATTERY_LEVEL_FIELD_NUMBER = 7;
    private boolean hasBatteryLevel;
    private int batteryLevel_ = 0;
    public boolean hasBatteryLevel() { return hasBatteryLevel; }
    public int getBatteryLevel() { return batteryLevel_; }
    
    // optional string phone_number = 8;
    public static final int PHONE_NUMBER_FIELD_NUMBER = 8;
    private boolean hasPhoneNumber;
    private java.lang.String phoneNumber_ = "";
    public boolean hasPhoneNumber() { return hasPhoneNumber; }
    public java.lang.String getPhoneNumber() { return phoneNumber_; }
    
    // optional string third_party_data = 9;
    public static final int THIRD_PARTY_DATA_FIELD_NUMBER = 9;
    private boolean hasThirdPartyData;
    private java.lang.String thirdPartyData_ = "";
    public boolean hasThirdPartyData() { return hasThirdPartyData; }
    public java.lang.String getThirdPartyData() { return thirdPartyData_; }
    
    private void initFields() {
      type_ = com.google.code.notifier.message.Protocol.Notification.Type.RING;
    }
    public final boolean isInitialized() {
      if (!hasDeviceId) return false;
      if (!hasId) return false;
      if (!hasType) return false;
      if (!hasDescription) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDeviceId()) {
        output.writeFixed32(1, getDeviceId());
      }
      if (hasId()) {
        output.writeFixed32(2, getId());
      }
      if (hasType()) {
        output.writeEnum(3, getType().getNumber());
      }
      if (hasDescription()) {
        output.writeString(4, getDescription());
      }
      if (hasTitle()) {
        output.writeString(5, getTitle());
      }
      if (hasIcon()) {
        output.writeBytes(6, getIcon());
      }
      if (hasBatteryLevel()) {
        output.writeInt32(7, getBatteryLevel());
      }
      if (hasPhoneNumber()) {
        output.writeString(8, getPhoneNumber());
      }
      if (hasThirdPartyData()) {
        output.writeString(9, getThirdPartyData());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDeviceId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, getDeviceId());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, getId());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, getType().getNumber());
      }
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getDescription());
      }
      if (hasTitle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getTitle());
      }
      if (hasIcon()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getIcon());
      }
      if (hasBatteryLevel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getBatteryLevel());
      }
      if (hasPhoneNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getPhoneNumber());
      }
      if (hasThirdPartyData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(9, getThirdPartyData());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.google.code.notifier.message.Protocol.Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.code.notifier.message.Protocol.Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.code.notifier.message.Protocol.Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.code.notifier.message.Protocol.Notification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.code.notifier.message.Protocol.Notification, Builder> {
      private com.google.code.notifier.message.Protocol.Notification result;
      
      // Construct using com.google.code.notifier.message.Protocol.Notification.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.google.code.notifier.message.Protocol.Notification();
        return builder;
      }
      
      protected com.google.code.notifier.message.Protocol.Notification internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.google.code.notifier.message.Protocol.Notification();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.code.notifier.message.Protocol.Notification getDefaultInstanceForType() {
        return com.google.code.notifier.message.Protocol.Notification.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.google.code.notifier.message.Protocol.Notification build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.google.code.notifier.message.Protocol.Notification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.google.code.notifier.message.Protocol.Notification buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.google.code.notifier.message.Protocol.Notification returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.code.notifier.message.Protocol.Notification other) {
        if (other == com.google.code.notifier.message.Protocol.Notification.getDefaultInstance()) return this;
        if (other.hasDeviceId()) {
          setDeviceId(other.getDeviceId());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasTitle()) {
          setTitle(other.getTitle());
        }
        if (other.hasIcon()) {
          setIcon(other.getIcon());
        }
        if (other.hasBatteryLevel()) {
          setBatteryLevel(other.getBatteryLevel());
        }
        if (other.hasPhoneNumber()) {
          setPhoneNumber(other.getPhoneNumber());
        }
        if (other.hasThirdPartyData()) {
          setThirdPartyData(other.getThirdPartyData());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 13: {
              setDeviceId(input.readFixed32());
              break;
            }
            case 21: {
              setId(input.readFixed32());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.google.code.notifier.message.Protocol.Notification.Type value = com.google.code.notifier.message.Protocol.Notification.Type.valueOf(rawValue);
              if (value != null) {
                setType(value);
              }
              break;
            }
            case 34: {
              setDescription(input.readString());
              break;
            }
            case 42: {
              setTitle(input.readString());
              break;
            }
            case 50: {
              setIcon(input.readBytes());
              break;
            }
            case 56: {
              setBatteryLevel(input.readInt32());
              break;
            }
            case 66: {
              setPhoneNumber(input.readString());
              break;
            }
            case 74: {
              setThirdPartyData(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required fixed32 device_id = 1;
      public boolean hasDeviceId() {
        return result.hasDeviceId();
      }
      public int getDeviceId() {
        return result.getDeviceId();
      }
      public Builder setDeviceId(int value) {
        result.hasDeviceId = true;
        result.deviceId_ = value;
        return this;
      }
      public Builder clearDeviceId() {
        result.hasDeviceId = false;
        result.deviceId_ = 0;
        return this;
      }
      
      // required fixed32 id = 2;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // required .android_notifier.Notification.Type type = 3;
      public boolean hasType() {
        return result.hasType();
      }
      public com.google.code.notifier.message.Protocol.Notification.Type getType() {
        return result.getType();
      }
      public Builder setType(com.google.code.notifier.message.Protocol.Notification.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.google.code.notifier.message.Protocol.Notification.Type.RING;
        return this;
      }
      
      // required string description = 4;
      public boolean hasDescription() {
        return result.hasDescription();
      }
      public java.lang.String getDescription() {
        return result.getDescription();
      }
      public Builder setDescription(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = getDefaultInstance().getDescription();
        return this;
      }
      
      // optional string title = 5;
      public boolean hasTitle() {
        return result.hasTitle();
      }
      public java.lang.String getTitle() {
        return result.getTitle();
      }
      public Builder setTitle(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTitle = true;
        result.title_ = value;
        return this;
      }
      public Builder clearTitle() {
        result.hasTitle = false;
        result.title_ = getDefaultInstance().getTitle();
        return this;
      }
      
      // optional bytes icon = 6;
      public boolean hasIcon() {
        return result.hasIcon();
      }
      public com.google.protobuf.ByteString getIcon() {
        return result.getIcon();
      }
      public Builder setIcon(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasIcon = true;
        result.icon_ = value;
        return this;
      }
      public Builder clearIcon() {
        result.hasIcon = false;
        result.icon_ = getDefaultInstance().getIcon();
        return this;
      }
      
      // optional int32 battery_level = 7;
      public boolean hasBatteryLevel() {
        return result.hasBatteryLevel();
      }
      public int getBatteryLevel() {
        return result.getBatteryLevel();
      }
      public Builder setBatteryLevel(int value) {
        result.hasBatteryLevel = true;
        result.batteryLevel_ = value;
        return this;
      }
      public Builder clearBatteryLevel() {
        result.hasBatteryLevel = false;
        result.batteryLevel_ = 0;
        return this;
      }
      
      // optional string phone_number = 8;
      public boolean hasPhoneNumber() {
        return result.hasPhoneNumber();
      }
      public java.lang.String getPhoneNumber() {
        return result.getPhoneNumber();
      }
      public Builder setPhoneNumber(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPhoneNumber = true;
        result.phoneNumber_ = value;
        return this;
      }
      public Builder clearPhoneNumber() {
        result.hasPhoneNumber = false;
        result.phoneNumber_ = getDefaultInstance().getPhoneNumber();
        return this;
      }
      
      // optional string third_party_data = 9;
      public boolean hasThirdPartyData() {
        return result.hasThirdPartyData();
      }
      public java.lang.String getThirdPartyData() {
        return result.getThirdPartyData();
      }
      public Builder setThirdPartyData(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasThirdPartyData = true;
        result.thirdPartyData_ = value;
        return this;
      }
      public Builder clearThirdPartyData() {
        result.hasThirdPartyData = false;
        result.thirdPartyData_ = getDefaultInstance().getThirdPartyData();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:android_notifier.Notification)
    }
    
    static {
      defaultInstance = new Notification(true);
      com.google.code.notifier.message.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:android_notifier.Notification)
  }
  
  public static final class Search extends
      com.google.protobuf.GeneratedMessageLite {
    // Use Search.newBuilder() to construct.
    private Search() {
      initFields();
    }
    private Search(boolean noInit) {}
    
    private static final Search defaultInstance;
    public static Search getDefaultInstance() {
      return defaultInstance;
    }
    
    public Search getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final class Request extends
        com.google.protobuf.GeneratedMessageLite {
      // Use Request.newBuilder() to construct.
      private Request() {
        initFields();
      }
      private Request(boolean noInit) {}
      
      private static final Request defaultInstance;
      public static Request getDefaultInstance() {
        return defaultInstance;
      }
      
      public Request getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // required string device_id = 1;
      public static final int DEVICE_ID_FIELD_NUMBER = 1;
      private boolean hasDeviceId;
      private java.lang.String deviceId_ = "";
      public boolean hasDeviceId() { return hasDeviceId; }
      public java.lang.String getDeviceId() { return deviceId_; }
      
      // required string id = 2;
      public static final int ID_FIELD_NUMBER = 2;
      private boolean hasId;
      private java.lang.String id_ = "";
      public boolean hasId() { return hasId; }
      public java.lang.String getId() { return id_; }
      
      // required string query = 3;
      public static final int QUERY_FIELD_NUMBER = 3;
      private boolean hasQuery;
      private java.lang.String query_ = "";
      public boolean hasQuery() { return hasQuery; }
      public java.lang.String getQuery() { return query_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasDeviceId) return false;
        if (!hasId) return false;
        if (!hasQuery) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasDeviceId()) {
          output.writeString(1, getDeviceId());
        }
        if (hasId()) {
          output.writeString(2, getId());
        }
        if (hasQuery()) {
          output.writeString(3, getQuery());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasDeviceId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getDeviceId());
        }
        if (hasId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getId());
        }
        if (hasQuery()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(3, getQuery());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.google.code.notifier.message.Protocol.Search.Request parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Request parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Request parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Request parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Request parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Request parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Request parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.code.notifier.message.Protocol.Search.Request parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.code.notifier.message.Protocol.Search.Request parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Request parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.google.code.notifier.message.Protocol.Search.Request prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.code.notifier.message.Protocol.Search.Request, Builder> {
        private com.google.code.notifier.message.Protocol.Search.Request result;
        
        // Construct using com.google.code.notifier.message.Protocol.Search.Request.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.google.code.notifier.message.Protocol.Search.Request();
          return builder;
        }
        
        protected com.google.code.notifier.message.Protocol.Search.Request internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.google.code.notifier.message.Protocol.Search.Request();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.code.notifier.message.Protocol.Search.Request getDefaultInstanceForType() {
          return com.google.code.notifier.message.Protocol.Search.Request.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.google.code.notifier.message.Protocol.Search.Request build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.google.code.notifier.message.Protocol.Search.Request buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.google.code.notifier.message.Protocol.Search.Request buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.google.code.notifier.message.Protocol.Search.Request returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.code.notifier.message.Protocol.Search.Request other) {
          if (other == com.google.code.notifier.message.Protocol.Search.Request.getDefaultInstance()) return this;
          if (other.hasDeviceId()) {
            setDeviceId(other.getDeviceId());
          }
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasQuery()) {
            setQuery(other.getQuery());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                setDeviceId(input.readString());
                break;
              }
              case 18: {
                setId(input.readString());
                break;
              }
              case 26: {
                setQuery(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required string device_id = 1;
        public boolean hasDeviceId() {
          return result.hasDeviceId();
        }
        public java.lang.String getDeviceId() {
          return result.getDeviceId();
        }
        public Builder setDeviceId(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasDeviceId = true;
          result.deviceId_ = value;
          return this;
        }
        public Builder clearDeviceId() {
          result.hasDeviceId = false;
          result.deviceId_ = getDefaultInstance().getDeviceId();
          return this;
        }
        
        // required string id = 2;
        public boolean hasId() {
          return result.hasId();
        }
        public java.lang.String getId() {
          return result.getId();
        }
        public Builder setId(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasId = true;
          result.id_ = value;
          return this;
        }
        public Builder clearId() {
          result.hasId = false;
          result.id_ = getDefaultInstance().getId();
          return this;
        }
        
        // required string query = 3;
        public boolean hasQuery() {
          return result.hasQuery();
        }
        public java.lang.String getQuery() {
          return result.getQuery();
        }
        public Builder setQuery(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasQuery = true;
          result.query_ = value;
          return this;
        }
        public Builder clearQuery() {
          result.hasQuery = false;
          result.query_ = getDefaultInstance().getQuery();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:android_notifier.Search.Request)
      }
      
      static {
        defaultInstance = new Request(true);
        com.google.code.notifier.message.Protocol.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:android_notifier.Search.Request)
    }
    
    public static final class Response extends
        com.google.protobuf.GeneratedMessageLite {
      // Use Response.newBuilder() to construct.
      private Response() {
        initFields();
      }
      private Response(boolean noInit) {}
      
      private static final Response defaultInstance;
      public static Response getDefaultInstance() {
        return defaultInstance;
      }
      
      public Response getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // required string device_id = 1;
      public static final int DEVICE_ID_FIELD_NUMBER = 1;
      private boolean hasDeviceId;
      private java.lang.String deviceId_ = "";
      public boolean hasDeviceId() { return hasDeviceId; }
      public java.lang.String getDeviceId() { return deviceId_; }
      
      // required string id = 2;
      public static final int ID_FIELD_NUMBER = 2;
      private boolean hasId;
      private java.lang.String id_ = "";
      public boolean hasId() { return hasId; }
      public java.lang.String getId() { return id_; }
      
      // repeated .android_notifier.Contact contacts = 3;
      public static final int CONTACTS_FIELD_NUMBER = 3;
      private java.util.List<com.google.code.notifier.message.Protocol.Contact> contacts_ =
        java.util.Collections.emptyList();
      public java.util.List<com.google.code.notifier.message.Protocol.Contact> getContactsList() {
        return contacts_;
      }
      public int getContactsCount() { return contacts_.size(); }
      public com.google.code.notifier.message.Protocol.Contact getContacts(int index) {
        return contacts_.get(index);
      }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasDeviceId) return false;
        if (!hasId) return false;
        for (com.google.code.notifier.message.Protocol.Contact element : getContactsList()) {
          if (!element.isInitialized()) return false;
        }
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasDeviceId()) {
          output.writeString(1, getDeviceId());
        }
        if (hasId()) {
          output.writeString(2, getId());
        }
        for (com.google.code.notifier.message.Protocol.Contact element : getContactsList()) {
          output.writeMessage(3, element);
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasDeviceId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getDeviceId());
        }
        if (hasId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getId());
        }
        for (com.google.code.notifier.message.Protocol.Contact element : getContactsList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, element);
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.google.code.notifier.message.Protocol.Search.Response parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Response parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Response parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Response parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Response parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Response parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Response parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.code.notifier.message.Protocol.Search.Response parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.code.notifier.message.Protocol.Search.Response parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.Search.Response parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.google.code.notifier.message.Protocol.Search.Response prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.code.notifier.message.Protocol.Search.Response, Builder> {
        private com.google.code.notifier.message.Protocol.Search.Response result;
        
        // Construct using com.google.code.notifier.message.Protocol.Search.Response.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.google.code.notifier.message.Protocol.Search.Response();
          return builder;
        }
        
        protected com.google.code.notifier.message.Protocol.Search.Response internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.google.code.notifier.message.Protocol.Search.Response();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.code.notifier.message.Protocol.Search.Response getDefaultInstanceForType() {
          return com.google.code.notifier.message.Protocol.Search.Response.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.google.code.notifier.message.Protocol.Search.Response build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.google.code.notifier.message.Protocol.Search.Response buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.google.code.notifier.message.Protocol.Search.Response buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.contacts_ != java.util.Collections.EMPTY_LIST) {
            result.contacts_ =
              java.util.Collections.unmodifiableList(result.contacts_);
          }
          com.google.code.notifier.message.Protocol.Search.Response returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.code.notifier.message.Protocol.Search.Response other) {
          if (other == com.google.code.notifier.message.Protocol.Search.Response.getDefaultInstance()) return this;
          if (other.hasDeviceId()) {
            setDeviceId(other.getDeviceId());
          }
          if (other.hasId()) {
            setId(other.getId());
          }
          if (!other.contacts_.isEmpty()) {
            if (result.contacts_.isEmpty()) {
              result.contacts_ = new java.util.ArrayList<com.google.code.notifier.message.Protocol.Contact>();
            }
            result.contacts_.addAll(other.contacts_);
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                setDeviceId(input.readString());
                break;
              }
              case 18: {
                setId(input.readString());
                break;
              }
              case 26: {
                com.google.code.notifier.message.Protocol.Contact.Builder subBuilder = com.google.code.notifier.message.Protocol.Contact.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addContacts(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // required string device_id = 1;
        public boolean hasDeviceId() {
          return result.hasDeviceId();
        }
        public java.lang.String getDeviceId() {
          return result.getDeviceId();
        }
        public Builder setDeviceId(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasDeviceId = true;
          result.deviceId_ = value;
          return this;
        }
        public Builder clearDeviceId() {
          result.hasDeviceId = false;
          result.deviceId_ = getDefaultInstance().getDeviceId();
          return this;
        }
        
        // required string id = 2;
        public boolean hasId() {
          return result.hasId();
        }
        public java.lang.String getId() {
          return result.getId();
        }
        public Builder setId(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasId = true;
          result.id_ = value;
          return this;
        }
        public Builder clearId() {
          result.hasId = false;
          result.id_ = getDefaultInstance().getId();
          return this;
        }
        
        // repeated .android_notifier.Contact contacts = 3;
        public java.util.List<com.google.code.notifier.message.Protocol.Contact> getContactsList() {
          return java.util.Collections.unmodifiableList(result.contacts_);
        }
        public int getContactsCount() {
          return result.getContactsCount();
        }
        public com.google.code.notifier.message.Protocol.Contact getContacts(int index) {
          return result.getContacts(index);
        }
        public Builder setContacts(int index, com.google.code.notifier.message.Protocol.Contact value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.contacts_.set(index, value);
          return this;
        }
        public Builder setContacts(int index, com.google.code.notifier.message.Protocol.Contact.Builder builderForValue) {
          result.contacts_.set(index, builderForValue.build());
          return this;
        }
        public Builder addContacts(com.google.code.notifier.message.Protocol.Contact value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.contacts_.isEmpty()) {
            result.contacts_ = new java.util.ArrayList<com.google.code.notifier.message.Protocol.Contact>();
          }
          result.contacts_.add(value);
          return this;
        }
        public Builder addContacts(com.google.code.notifier.message.Protocol.Contact.Builder builderForValue) {
          if (result.contacts_.isEmpty()) {
            result.contacts_ = new java.util.ArrayList<com.google.code.notifier.message.Protocol.Contact>();
          }
          result.contacts_.add(builderForValue.build());
          return this;
        }
        public Builder addAllContacts(
            java.lang.Iterable<? extends com.google.code.notifier.message.Protocol.Contact> values) {
          if (result.contacts_.isEmpty()) {
            result.contacts_ = new java.util.ArrayList<com.google.code.notifier.message.Protocol.Contact>();
          }
          super.addAll(values, result.contacts_);
          return this;
        }
        public Builder clearContacts() {
          result.contacts_ = java.util.Collections.emptyList();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:android_notifier.Search.Response)
      }
      
      static {
        defaultInstance = new Response(true);
        com.google.code.notifier.message.Protocol.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:android_notifier.Search.Response)
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.google.code.notifier.message.Protocol.Search parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Search parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Search parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Search parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Search parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Search parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Search parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.code.notifier.message.Protocol.Search parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.code.notifier.message.Protocol.Search parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Search parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.code.notifier.message.Protocol.Search prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.code.notifier.message.Protocol.Search, Builder> {
      private com.google.code.notifier.message.Protocol.Search result;
      
      // Construct using com.google.code.notifier.message.Protocol.Search.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.google.code.notifier.message.Protocol.Search();
        return builder;
      }
      
      protected com.google.code.notifier.message.Protocol.Search internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.google.code.notifier.message.Protocol.Search();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.code.notifier.message.Protocol.Search getDefaultInstanceForType() {
        return com.google.code.notifier.message.Protocol.Search.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.google.code.notifier.message.Protocol.Search build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.google.code.notifier.message.Protocol.Search buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.google.code.notifier.message.Protocol.Search buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.google.code.notifier.message.Protocol.Search returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.code.notifier.message.Protocol.Search other) {
        if (other == com.google.code.notifier.message.Protocol.Search.getDefaultInstance()) return this;
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:android_notifier.Search)
    }
    
    static {
      defaultInstance = new Search(true);
      com.google.code.notifier.message.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:android_notifier.Search)
  }
  
  public static final class SendSms extends
      com.google.protobuf.GeneratedMessageLite {
    // Use SendSms.newBuilder() to construct.
    private SendSms() {
      initFields();
    }
    private SendSms(boolean noInit) {}
    
    private static final SendSms defaultInstance;
    public static SendSms getDefaultInstance() {
      return defaultInstance;
    }
    
    public SendSms getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final class Request extends
        com.google.protobuf.GeneratedMessageLite {
      // Use Request.newBuilder() to construct.
      private Request() {
        initFields();
      }
      private Request(boolean noInit) {}
      
      private static final Request defaultInstance;
      public static Request getDefaultInstance() {
        return defaultInstance;
      }
      
      public Request getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // required string device_id = 1;
      public static final int DEVICE_ID_FIELD_NUMBER = 1;
      private boolean hasDeviceId;
      private java.lang.String deviceId_ = "";
      public boolean hasDeviceId() { return hasDeviceId; }
      public java.lang.String getDeviceId() { return deviceId_; }
      
      // required string id = 2;
      public static final int ID_FIELD_NUMBER = 2;
      private boolean hasId;
      private java.lang.String id_ = "";
      public boolean hasId() { return hasId; }
      public java.lang.String getId() { return id_; }
      
      // required string phone_number = 3;
      public static final int PHONE_NUMBER_FIELD_NUMBER = 3;
      private boolean hasPhoneNumber;
      private java.lang.String phoneNumber_ = "";
      public boolean hasPhoneNumber() { return hasPhoneNumber; }
      public java.lang.String getPhoneNumber() { return phoneNumber_; }
      
      // required string sms_message = 4;
      public static final int SMS_MESSAGE_FIELD_NUMBER = 4;
      private boolean hasSmsMessage;
      private java.lang.String smsMessage_ = "";
      public boolean hasSmsMessage() { return hasSmsMessage; }
      public java.lang.String getSmsMessage() { return smsMessage_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasDeviceId) return false;
        if (!hasId) return false;
        if (!hasPhoneNumber) return false;
        if (!hasSmsMessage) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasDeviceId()) {
          output.writeString(1, getDeviceId());
        }
        if (hasId()) {
          output.writeString(2, getId());
        }
        if (hasPhoneNumber()) {
          output.writeString(3, getPhoneNumber());
        }
        if (hasSmsMessage()) {
          output.writeString(4, getSmsMessage());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasDeviceId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getDeviceId());
        }
        if (hasId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getId());
        }
        if (hasPhoneNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(3, getPhoneNumber());
        }
        if (hasSmsMessage()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(4, getSmsMessage());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.google.code.notifier.message.Protocol.SendSms.Request parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Request parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Request parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Request parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Request parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Request parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Request parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Request parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Request parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Request parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.google.code.notifier.message.Protocol.SendSms.Request prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.code.notifier.message.Protocol.SendSms.Request, Builder> {
        private com.google.code.notifier.message.Protocol.SendSms.Request result;
        
        // Construct using com.google.code.notifier.message.Protocol.SendSms.Request.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.google.code.notifier.message.Protocol.SendSms.Request();
          return builder;
        }
        
        protected com.google.code.notifier.message.Protocol.SendSms.Request internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.google.code.notifier.message.Protocol.SendSms.Request();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.code.notifier.message.Protocol.SendSms.Request getDefaultInstanceForType() {
          return com.google.code.notifier.message.Protocol.SendSms.Request.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.google.code.notifier.message.Protocol.SendSms.Request build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.google.code.notifier.message.Protocol.SendSms.Request buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.google.code.notifier.message.Protocol.SendSms.Request buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.google.code.notifier.message.Protocol.SendSms.Request returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.code.notifier.message.Protocol.SendSms.Request other) {
          if (other == com.google.code.notifier.message.Protocol.SendSms.Request.getDefaultInstance()) return this;
          if (other.hasDeviceId()) {
            setDeviceId(other.getDeviceId());
          }
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasPhoneNumber()) {
            setPhoneNumber(other.getPhoneNumber());
          }
          if (other.hasSmsMessage()) {
            setSmsMessage(other.getSmsMessage());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                setDeviceId(input.readString());
                break;
              }
              case 18: {
                setId(input.readString());
                break;
              }
              case 26: {
                setPhoneNumber(input.readString());
                break;
              }
              case 34: {
                setSmsMessage(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required string device_id = 1;
        public boolean hasDeviceId() {
          return result.hasDeviceId();
        }
        public java.lang.String getDeviceId() {
          return result.getDeviceId();
        }
        public Builder setDeviceId(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasDeviceId = true;
          result.deviceId_ = value;
          return this;
        }
        public Builder clearDeviceId() {
          result.hasDeviceId = false;
          result.deviceId_ = getDefaultInstance().getDeviceId();
          return this;
        }
        
        // required string id = 2;
        public boolean hasId() {
          return result.hasId();
        }
        public java.lang.String getId() {
          return result.getId();
        }
        public Builder setId(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasId = true;
          result.id_ = value;
          return this;
        }
        public Builder clearId() {
          result.hasId = false;
          result.id_ = getDefaultInstance().getId();
          return this;
        }
        
        // required string phone_number = 3;
        public boolean hasPhoneNumber() {
          return result.hasPhoneNumber();
        }
        public java.lang.String getPhoneNumber() {
          return result.getPhoneNumber();
        }
        public Builder setPhoneNumber(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasPhoneNumber = true;
          result.phoneNumber_ = value;
          return this;
        }
        public Builder clearPhoneNumber() {
          result.hasPhoneNumber = false;
          result.phoneNumber_ = getDefaultInstance().getPhoneNumber();
          return this;
        }
        
        // required string sms_message = 4;
        public boolean hasSmsMessage() {
          return result.hasSmsMessage();
        }
        public java.lang.String getSmsMessage() {
          return result.getSmsMessage();
        }
        public Builder setSmsMessage(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasSmsMessage = true;
          result.smsMessage_ = value;
          return this;
        }
        public Builder clearSmsMessage() {
          result.hasSmsMessage = false;
          result.smsMessage_ = getDefaultInstance().getSmsMessage();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:android_notifier.SendSms.Request)
      }
      
      static {
        defaultInstance = new Request(true);
        com.google.code.notifier.message.Protocol.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:android_notifier.SendSms.Request)
    }
    
    public static final class Response extends
        com.google.protobuf.GeneratedMessageLite {
      // Use Response.newBuilder() to construct.
      private Response() {
        initFields();
      }
      private Response(boolean noInit) {}
      
      private static final Response defaultInstance;
      public static Response getDefaultInstance() {
        return defaultInstance;
      }
      
      public Response getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // required string device_id = 1;
      public static final int DEVICE_ID_FIELD_NUMBER = 1;
      private boolean hasDeviceId;
      private java.lang.String deviceId_ = "";
      public boolean hasDeviceId() { return hasDeviceId; }
      public java.lang.String getDeviceId() { return deviceId_; }
      
      // required string id = 2;
      public static final int ID_FIELD_NUMBER = 2;
      private boolean hasId;
      private java.lang.String id_ = "";
      public boolean hasId() { return hasId; }
      public java.lang.String getId() { return id_; }
      
      // required int32 result_code = 3;
      public static final int RESULT_CODE_FIELD_NUMBER = 3;
      private boolean hasResultCode;
      private int resultCode_ = 0;
      public boolean hasResultCode() { return hasResultCode; }
      public int getResultCode() { return resultCode_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasDeviceId) return false;
        if (!hasId) return false;
        if (!hasResultCode) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasDeviceId()) {
          output.writeString(1, getDeviceId());
        }
        if (hasId()) {
          output.writeString(2, getId());
        }
        if (hasResultCode()) {
          output.writeInt32(3, getResultCode());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasDeviceId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getDeviceId());
        }
        if (hasId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getId());
        }
        if (hasResultCode()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, getResultCode());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.google.code.notifier.message.Protocol.SendSms.Response parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Response parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Response parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Response parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Response parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Response parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Response parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Response parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Response parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.code.notifier.message.Protocol.SendSms.Response parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.google.code.notifier.message.Protocol.SendSms.Response prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.code.notifier.message.Protocol.SendSms.Response, Builder> {
        private com.google.code.notifier.message.Protocol.SendSms.Response result;
        
        // Construct using com.google.code.notifier.message.Protocol.SendSms.Response.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.google.code.notifier.message.Protocol.SendSms.Response();
          return builder;
        }
        
        protected com.google.code.notifier.message.Protocol.SendSms.Response internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.google.code.notifier.message.Protocol.SendSms.Response();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.code.notifier.message.Protocol.SendSms.Response getDefaultInstanceForType() {
          return com.google.code.notifier.message.Protocol.SendSms.Response.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.google.code.notifier.message.Protocol.SendSms.Response build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.google.code.notifier.message.Protocol.SendSms.Response buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.google.code.notifier.message.Protocol.SendSms.Response buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.google.code.notifier.message.Protocol.SendSms.Response returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.code.notifier.message.Protocol.SendSms.Response other) {
          if (other == com.google.code.notifier.message.Protocol.SendSms.Response.getDefaultInstance()) return this;
          if (other.hasDeviceId()) {
            setDeviceId(other.getDeviceId());
          }
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasResultCode()) {
            setResultCode(other.getResultCode());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                setDeviceId(input.readString());
                break;
              }
              case 18: {
                setId(input.readString());
                break;
              }
              case 24: {
                setResultCode(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // required string device_id = 1;
        public boolean hasDeviceId() {
          return result.hasDeviceId();
        }
        public java.lang.String getDeviceId() {
          return result.getDeviceId();
        }
        public Builder setDeviceId(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasDeviceId = true;
          result.deviceId_ = value;
          return this;
        }
        public Builder clearDeviceId() {
          result.hasDeviceId = false;
          result.deviceId_ = getDefaultInstance().getDeviceId();
          return this;
        }
        
        // required string id = 2;
        public boolean hasId() {
          return result.hasId();
        }
        public java.lang.String getId() {
          return result.getId();
        }
        public Builder setId(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasId = true;
          result.id_ = value;
          return this;
        }
        public Builder clearId() {
          result.hasId = false;
          result.id_ = getDefaultInstance().getId();
          return this;
        }
        
        // required int32 result_code = 3;
        public boolean hasResultCode() {
          return result.hasResultCode();
        }
        public int getResultCode() {
          return result.getResultCode();
        }
        public Builder setResultCode(int value) {
          result.hasResultCode = true;
          result.resultCode_ = value;
          return this;
        }
        public Builder clearResultCode() {
          result.hasResultCode = false;
          result.resultCode_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:android_notifier.SendSms.Response)
      }
      
      static {
        defaultInstance = new Response(true);
        com.google.code.notifier.message.Protocol.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:android_notifier.SendSms.Response)
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.google.code.notifier.message.Protocol.SendSms parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.SendSms parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.SendSms parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.SendSms parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.SendSms parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.SendSms parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.SendSms parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.code.notifier.message.Protocol.SendSms parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.code.notifier.message.Protocol.SendSms parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.SendSms parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.code.notifier.message.Protocol.SendSms prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.code.notifier.message.Protocol.SendSms, Builder> {
      private com.google.code.notifier.message.Protocol.SendSms result;
      
      // Construct using com.google.code.notifier.message.Protocol.SendSms.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.google.code.notifier.message.Protocol.SendSms();
        return builder;
      }
      
      protected com.google.code.notifier.message.Protocol.SendSms internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.google.code.notifier.message.Protocol.SendSms();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.code.notifier.message.Protocol.SendSms getDefaultInstanceForType() {
        return com.google.code.notifier.message.Protocol.SendSms.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.google.code.notifier.message.Protocol.SendSms build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.google.code.notifier.message.Protocol.SendSms buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.google.code.notifier.message.Protocol.SendSms buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.google.code.notifier.message.Protocol.SendSms returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.code.notifier.message.Protocol.SendSms other) {
        if (other == com.google.code.notifier.message.Protocol.SendSms.getDefaultInstance()) return this;
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:android_notifier.SendSms)
    }
    
    static {
      defaultInstance = new SendSms(true);
      com.google.code.notifier.message.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:android_notifier.SendSms)
  }
  
  public static final class Contact extends
      com.google.protobuf.GeneratedMessageLite {
    // Use Contact.newBuilder() to construct.
    private Contact() {
      initFields();
    }
    private Contact(boolean noInit) {}
    
    private static final Contact defaultInstance;
    public static Contact getDefaultInstance() {
      return defaultInstance;
    }
    
    public Contact getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum Type
        implements com.google.protobuf.Internal.EnumLite {
      HOME(0, 0),
      MOBILE(1, 1),
      WORK(2, 2),
      OTHER(3, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 0: return HOME;
          case 1: return MOBILE;
          case 2: return WORK;
          case 3: return OTHER;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:android_notifier.Contact.Type)
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required .android_notifier.Contact.Type type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private com.google.code.notifier.message.Protocol.Contact.Type type_;
    public boolean hasType() { return hasType; }
    public com.google.code.notifier.message.Protocol.Contact.Type getType() { return type_; }
    
    // required string number = 3;
    public static final int NUMBER_FIELD_NUMBER = 3;
    private boolean hasNumber;
    private java.lang.String number_ = "";
    public boolean hasNumber() { return hasNumber; }
    public java.lang.String getNumber() { return number_; }
    
    // optional bytes picture = 4;
    public static final int PICTURE_FIELD_NUMBER = 4;
    private boolean hasPicture;
    private com.google.protobuf.ByteString picture_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasPicture() { return hasPicture; }
    public com.google.protobuf.ByteString getPicture() { return picture_; }
    
    private void initFields() {
      type_ = com.google.code.notifier.message.Protocol.Contact.Type.HOME;
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasType) return false;
      if (!hasNumber) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasType()) {
        output.writeEnum(2, getType().getNumber());
      }
      if (hasNumber()) {
        output.writeString(3, getNumber());
      }
      if (hasPicture()) {
        output.writeBytes(4, getPicture());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getType().getNumber());
      }
      if (hasNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getNumber());
      }
      if (hasPicture()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getPicture());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.google.code.notifier.message.Protocol.Contact parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Contact parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Contact parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Contact parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Contact parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Contact parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Contact parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.code.notifier.message.Protocol.Contact parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.code.notifier.message.Protocol.Contact parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.code.notifier.message.Protocol.Contact parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.code.notifier.message.Protocol.Contact prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.code.notifier.message.Protocol.Contact, Builder> {
      private com.google.code.notifier.message.Protocol.Contact result;
      
      // Construct using com.google.code.notifier.message.Protocol.Contact.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.google.code.notifier.message.Protocol.Contact();
        return builder;
      }
      
      protected com.google.code.notifier.message.Protocol.Contact internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.google.code.notifier.message.Protocol.Contact();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.code.notifier.message.Protocol.Contact getDefaultInstanceForType() {
        return com.google.code.notifier.message.Protocol.Contact.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.google.code.notifier.message.Protocol.Contact build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.google.code.notifier.message.Protocol.Contact buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.google.code.notifier.message.Protocol.Contact buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.google.code.notifier.message.Protocol.Contact returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.code.notifier.message.Protocol.Contact other) {
        if (other == com.google.code.notifier.message.Protocol.Contact.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasNumber()) {
          setNumber(other.getNumber());
        }
        if (other.hasPicture()) {
          setPicture(other.getPicture());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.google.code.notifier.message.Protocol.Contact.Type value = com.google.code.notifier.message.Protocol.Contact.Type.valueOf(rawValue);
              if (value != null) {
                setType(value);
              }
              break;
            }
            case 26: {
              setNumber(input.readString());
              break;
            }
            case 34: {
              setPicture(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required .android_notifier.Contact.Type type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public com.google.code.notifier.message.Protocol.Contact.Type getType() {
        return result.getType();
      }
      public Builder setType(com.google.code.notifier.message.Protocol.Contact.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.google.code.notifier.message.Protocol.Contact.Type.HOME;
        return this;
      }
      
      // required string number = 3;
      public boolean hasNumber() {
        return result.hasNumber();
      }
      public java.lang.String getNumber() {
        return result.getNumber();
      }
      public Builder setNumber(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNumber = true;
        result.number_ = value;
        return this;
      }
      public Builder clearNumber() {
        result.hasNumber = false;
        result.number_ = getDefaultInstance().getNumber();
        return this;
      }
      
      // optional bytes picture = 4;
      public boolean hasPicture() {
        return result.hasPicture();
      }
      public com.google.protobuf.ByteString getPicture() {
        return result.getPicture();
      }
      public Builder setPicture(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPicture = true;
        result.picture_ = value;
        return this;
      }
      public Builder clearPicture() {
        result.hasPicture = false;
        result.picture_ = getDefaultInstance().getPicture();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:android_notifier.Contact)
    }
    
    static {
      defaultInstance = new Contact(true);
      com.google.code.notifier.message.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:android_notifier.Contact)
  }
  
  
  static {
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
